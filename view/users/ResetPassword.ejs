<%-layout("layouts/boilerPlateCode.ejs")%> 

<!-- reset-password.ejs -->
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .ResetPasswordBox{
            height: 100vh;
            margin-top: 150px;
        }
        
        /* Loader Styles */
        .btn-loading {
            position: relative;
            pointer-events: none;
            opacity: 0.8;
        }
        
        .spinner-border-sm {
            width: 1rem;
            height: 1rem;
            margin-right: 8px;
        }
        
        .btn:disabled {
            cursor: not-allowed;
        }
        
        /* Password strength indicator */
        .password-strength {
            height: 5px;
            margin-top: 5px;
            border-radius: 3px;
            transition: all 0.3s ease;
        }
        
        .strength-weak { background-color: #dc3545; width: 33%; }
        .strength-medium { background-color: #ffc107; width: 66%; }
        .strength-strong { background-color: #198754; width: 100%; }
        
        /* Match indicator */
        .match-indicator {
            font-size: 0.875rem;
            margin-top: 5px;
            transition: all 0.3s ease;
        }
        
        .match-success { color: #198754; }
        .match-error { color: #dc3545; }
        
        /* Eye icon for password visibility */
        .password-toggle {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            color: #6c757d;
            z-index: 10;
        }
        
        .password-input-container {
            position: relative;
        }
        
        /* Smooth transitions */
        .btn, .form-control {
            transition: all 0.3s ease;
        }
        
        .form-control:focus {
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
            transform: translateY(-1px);
        }
    </style>
</head>
<body>
    <div class="ResetPasswordBox container">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card shadow">
                    <div class="card-header bg-success text-white">
                        <h3 class="text-center mb-0"> Set New Password</h3>
                    </div>
                    <div class="card-body">
                        <!-- Flash Messages -->
                        <% if (errorMessage && errorMessage.length > 0) { %>
                            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                                <i class="bi bi-exclamation-triangle-fill"></i> <%= errorMessage %>
                                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                            </div>
                        <% } %>
                        
                        <form id="resetPasswordForm" method="POST" action="/shopcard/authenticate/reset-password/<%= token %>">
                            <div class="mb-3">
                                <label for="password" class="form-label"> New Password</label>
                                <div class="password-input-container">
                                    <input type="password" 
                                           class="form-control" 
                                           id="password" 
                                           name="password" 
                                           required 
                                           minlength="6"
                                           placeholder="Enter your new password">
                                    <span class="password-toggle" onclick="togglePassword('password', this)">
                                        üëÅÔ∏è
                                    </span>
                                </div>
                                <div class="password-strength" id="passwordStrength"></div>
                                <small class="form-text text-muted">Password must be at least 6 characters long</small>
                            </div>
                            
                            <div class="mb-3">
                                <label for="confirmPassword" class="form-label"> Confirm Password</label>
                                <div class="password-input-container">
                                    <input type="password" 
                                           class="form-control" 
                                           id="confirmPassword" 
                                           name="confirmPassword" 
                                           required 
                                           minlength="6"
                                           placeholder="Confirm your new password">
                                    <span class="password-toggle" onclick="togglePassword('confirmPassword', this)">
                                        üëÅÔ∏è
                                    </span>
                                </div>
                                <div class="match-indicator" id="matchIndicator"></div>
                            </div>
                            
                            <div class="d-grid">
                                <button type="submit" 
                                        id="submitBtn" 
                                        class="btn btn-success btn-lg">
                                    <span id="btnText">Reset Password</span>
                                    <span id="btnLoader" class="d-none">
                                        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                        Updating...
                                    </span>
                                </button>
                            </div>
                        </form>
                        
                        <div class="text-center mt-3">
                            <small class="text-muted">
                                Remember your password? 
                                <a href="/shopcard/authenticate/register?action=login" class="text-decoration-none">
                                    Back to Login
                                </a>
                            </small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        // Password strength checker
        function checkPasswordStrength(password) {
            const strengthBar = document.getElementById('passwordStrength');
            let strength = 0;
            
            if (password.length >= 6) strength++;
            if (password.match(/[a-z]/) && password.match(/[A-Z]/)) strength++;
            if (password.match(/[0-9]/)) strength++;
            if (password.match(/[^a-zA-Z0-9]/)) strength++;
            
            strengthBar.className = 'password-strength';
            if (strength >= 1 && strength <= 2) {
                strengthBar.classList.add('strength-weak');
            } else if (strength === 3) {
                strengthBar.classList.add('strength-medium');
            } else if (strength >= 4) {
                strengthBar.classList.add('strength-strong');
            }
        }
        
        // Password match checker
        function checkPasswordMatch() {
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            const matchIndicator = document.getElementById('matchIndicator');
            
            if (confirmPassword.length > 0) {
                if (password === confirmPassword) {
                    matchIndicator.innerHTML = '‚úÖ Passwords match!';
                    matchIndicator.className = 'match-indicator match-success';
                    return true;
                } else {
                    matchIndicator.innerHTML = '‚ùå Passwords do not match!';
                    matchIndicator.className = 'match-indicator match-error';
                    return false;
                }
            } else {
                matchIndicator.innerHTML = '';
                return false;
            }
        }
        
        // Toggle password visibility
        function togglePassword(fieldId, icon) {
            const field = document.getElementById(fieldId);
            if (field.type === 'password') {
                field.type = 'text';
                icon.innerHTML = 'üôà';
            } else {
                field.type = 'password';
                icon.innerHTML = 'üëÅÔ∏è';
            }
        }
        
        // Event listeners
        document.getElementById('password').addEventListener('input', function() {
            checkPasswordStrength(this.value);
            checkPasswordMatch();
        });
        
        document.getElementById('confirmPassword').addEventListener('input', function() {
            checkPasswordMatch();
        });
        
        // Form submission with loader
        document.getElementById('resetPasswordForm').addEventListener('submit', function(e) {
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            const submitBtn = document.getElementById('submitBtn');
            const btnText = document.getElementById('btnText');
            const btnLoader = document.getElementById('btnLoader');
            
            // Validate passwords
            if (password.length < 6) {
                e.preventDefault();
                alert('‚ö†Ô∏è Password must be at least 6 characters long!');
                return;
            }
            
            if (password !== confirmPassword) {
                e.preventDefault();
                alert('‚ùå Passwords do not match!');
                return;
            }
            
            // Show loader
            btnText.classList.add('d-none');
            btnLoader.classList.remove('d-none');
            submitBtn.disabled = true;
            submitBtn.classList.add('btn-loading');
            
            // Visual feedback
            submitBtn.style.transform = 'scale(0.98)';
            
            // Safety timeout
            setTimeout(() => {
                btnText.classList.remove('d-none');
                btnLoader.classList.add('d-none');
                submitBtn.disabled = false;
                submitBtn.classList.remove('btn-loading');
                submitBtn.style.transform = 'scale(1)';
            }, 10000);
        });
        
        // Reset button on page show
        window.addEventListener('pageshow', function(event) {
            if (event.persisted) {
                const submitBtn = document.getElementById('submitBtn');
                const btnText = document.getElementById('btnText');
                const btnLoader = document.getElementById('btnLoader');
                
                btnText.classList.remove('d-none');
                btnLoader.classList.add('d-none');
                submitBtn.disabled = false;
                submitBtn.classList.remove('btn-loading');
                submitBtn.style.transform = 'scale(1)';
            }
        });
        
        // Auto-dismiss alerts
        setTimeout(function() {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(function(alert) {
                const bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            });
        }, 5000);
        
        // Add some animation on page load
        document.addEventListener('DOMContentLoaded', function() {
            const card = document.querySelector('.card');
            card.style.transform = 'translateY(20px)';
            card.style.opacity = '0';
            
            setTimeout(() => {
                card.style.transition = 'all 0.5s ease';
                card.style.transform = 'translateY(0)';
                card.style.opacity = '1';
            }, 100);
        });
    </script>
</body>
</html>